#!/bin/bash

# year=2017
# month=01

# remember that -b is inclusive and -e is exclusive.
# so -b 2016/01/01 -e 2017/01/01, starts on the first of 2016 and
# goes UP TO but not including the first of 2017.
YEAR=$year
NEXT_YEAR=`expr $YEAR + 1`

# we want to divide the display total by the number of current months in the year.
# so for 2016/06 we want to divide by 6 to get the average for the current year.
MONTH=$month


echo -n -e "${startBlue}Starting average expense cost...${endColor}"
# Average monthly spending on Food
ledger bal ^Expenses -f "$LEDGER_FILE" --price-db "$LEDGER_PRICES" \
-R --pedantic --no-total -b "$YEAR/01/01" -e "$NEXT_YEAR/01/01" --format \
"%(justify((market(display_total, date, '$') / $MONTH), 20, -1, true, color)) \
%(!options.flat ? depth_spacer : \"\") \
%-(ansify_if(partial_account(options.flat), blue if color))\n%/" \
> "${averages_dir}expenses-ytd-average.txt"

# "%-18((depth_spacer)+(partial_account)) \
# %12(market(display_total, date, '$') / $MONTH)\n" \

# "%(justify((market(display_total, date, '$') / $MONTH), 20, -1, true, color)) \
# %(!options.flat ? depth_spacer : \"\") \
# %-(ansify_if(partial_account(options.flat), blue if color))\n%/"

check_last_result
echo -e "${startGreenBold}DONE${endColor}"


echo -n -e "${startBlue}Starting average gas price per gallon...${endColor}"
# Average price/gallon of gas
ledger bal ^Expenses:Auto:Gas -f "$LEDGER_FILE" --price-db "$LEDGER_PRICES" \
-b "$YEAR/01/01" -e "$NEXT_YEAR/01/01" --format \
"%-18((depth_spacer)+(partial_account)) \
%12( ((market(display_total, date, '$'))) / (quantity(market(display_total, date, 'GAL'))) ) / GAL" \
> "${averages_dir}gas-per-gallon-ytd-average.txt"

# "%-18((depth_spacer)+(partial_account)) \
# %12( ((market(display_total, date, '$'))) / (quantity(market(display_total, date, 'GAL'))) ) / GAL" \

check_last_result
echo -e "${startGreenBold}DONE${endColor}"


# 434.886 GAL
